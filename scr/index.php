<?
require 'BotLy.php';

$userData = json_decode(base64_decode($user['data']),true);

if(!isset($userData['wish']['sex'])) $userData['wish']['sex'] = 0;

$keyboard = [];

function menuSearchkeyboard()
{
    global $user, $userData;

    $sexArray = ['–õ—é–±–æ–π', '–ú', '–ñ'];
    $ageArray = ['-18', '18-24', '25-35', '36+'];

    if($user['search'] == 0){
        Ly::keyboard( '‚ñ∂Ô∏è –í–∞—à –ø–æ–ª:', 10, ['m' => 1, 'i' => 'sex'] );
        foreach ($sexArray as $key => $value)
            Ly::keyboard( (($user['m_sex'] == $key)?"üëâ ":"" ).$value, 11, ['m' => 1, 'm_sex' => $key] );

        if( $user['m_sex'] > 0 ){
            // Ly::keyboard( '‚ñ∂Ô∏è –í–∞—à –≤–æ–∑—Ä–∞—Å—Ç:', 20, ['i' => 'age'] );
            // foreach ($ageArray as $key => $value)
            //     Ly::keyboard( (($user['m_age'] == $key)?"üëâ ":"" ).$value, 21, ['m_age' => $key] );

            Ly::keyboard( '‚ñ∂Ô∏è –ü–æ–ª —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞:', 50, ['m' => 1, 'i' => 'sex'] );
            foreach ($sexArray as $key => $value) {
                Ly::keyboard( (($userData['wish']['sex'] == $key)?"üëâ ":"" ).$value, 51, ['m' => 1, 'w_sex' => $key] );
            }

            // Ly::keyboard( '‚ñ∂Ô∏è –í–æ–∑—Ä–∞—Å—Ç —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞:', 60, ['i' => 'age'] );
            // foreach ($ageArray as $key => $value)
            //     Ly::keyboard( (($userData['wish']['age'][$key] == 1)?"üëâ ":"" ).$value, 61, ['w_age' => $key] );
        }

        Ly::keyboard( '‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ ‚óÄÔ∏è', 100, ['m' => 1, 'search' => 1] );
    }else{
        Ly::keyboard( '‚ñ∂Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫ ‚óÄÔ∏è', 100, ['m' => 1, 'search' => 0] );
    }
}

$menuText = "–ü—Ä–∏–≤–µ—Ç, <b>$login</b>\n–≠—Ç–æ –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç-–±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.\n–ù–∏–∫—Ç–æ –Ω–µ —É–∑–Ω–∞–µ—Ç –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏ –∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –ø–æ–∫–∞ –≤—ã —Å–∞–º–∏ –Ω–µ –∑–∞—Ö–æ—Ç–∏—Ç–µ —ç—Ç–æ–≥–æ.\n\n<b>–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏: </b> /privacy";
$menuSearchText = "<b>–ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞...</b>";

if( $user['dialog_id'] > 0 ) $userDialog = R::findOne('dialog', 'id = ?', [$user['dialog_id']]);
if(isset($userDialog)){
    $partnerUser = R::findOne('user', 'id = ?', [$userDialog['partner_id']]);
    if($partnerUser['dialog_id'] == 0) $user['dialog_id'] = 0;
}

if( isset($input['message']) && $input['message']['chat']['type'] == 'private' ){

    if($user['ban'] == 1){
        Ly::sendMethod ( 'sendMessage', ['chat_id' => $chat_id, 'text' => "<b>–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.</b>", 'parse_mode' => 'HTML' ] );
        exit;
    }

    if( $text == '/start' OR $text == '–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫' ){
        if(isset($partnerUser)){
            $message = "<b>–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ —É–∂–µ –Ω–∞–π–¥–µ–Ω, –æ–±—â–∞–π—Ç–µ—Å—å.</b>\n–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /actions";
        }else{

            $searchCount = R::count('user', 'search > 0');
            $dialogCount = R::count('dialog', 'end = 0');

            if($user['search'] == 0) $message = $menuText;
            else $message = $menuSearchText;

            $message .= "\n\n<b>–õ—é–¥–µ–π –≤ –ø–æ–∏—Å–∫:</b> ".$searchCount;
            $message .= "\n<b>–ê–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤:</b> ".$dialogCount;

            menuSearchkeyboard();

            $keyboard['inline_keyboard'] = array_values($keyboard['inline_keyboard']);
            $keyboard = json_encode( $keyboard );

            $sendMessage = Ly::sendMethod ( 'sendMessage', ['chat_id' => $chat_id, 'text' => $message, 'parse_mode' => 'HTML', 'reply_markup' => $keyboard ] );
            unset($message);
            
            if(isset($userData['menu_id'])) Ly::sendMethod ( 'deleteMessage', ['chat_id' => $user['telegram_id'], 'message_id' => $userData['menu_id'] ] );
            $userData['menu_id'] = $sendMessage['result']['message_id'];
        }
    }elseif( ( $text == '/actions' OR $text == '–î–µ–π—Å—Ç–≤–∏—è' ) ){
        $message = "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</b>";

        Ly::keyboard( "–û–±–º–µ–Ω—è—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏", 0, ['m' => 3, 'a' => 1] );
        Ly::keyboard( "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–ª–æ–≥", 1, ['m' => 3, 'a' => 2] );

        $keyboard['inline_keyboard'] = array_values($keyboard['inline_keyboard']);
        $keyboard = json_encode( $keyboard );
    }elseif( $text == '/privacy' OR $text == '–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏' ){
        $message = "<b>–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞:</b>\n\n<b>1. –ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –º—ã —Å–æ–±–∏—Ä–∞–µ–º –∏ –¥–ª—è —á–µ–≥–æ –æ–Ω–∏?</b>\n1.1 –í–∞—à –ø—É–±–ª–∏—á–Ω—ã–π ID Telegram, –∏–º—è –∏ username. –û–Ω–∏ –Ω—É–∂–Ω—ã –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –í–∞—Å –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç–æ–º.\n1.2 –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –í—ã –≤–≤–µ–ª–∏ –≤ –±–æ—Ç–µ, —Ç–∞–∫–∏–µ –∫–∞–∫ –ø–æ–ª –∏ –≤–æ–∑—Ä–∞—Å—Ç. –û–Ω–∏ –Ω—É–∂–Ω—ã –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.\n1.3 –í–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω –ø–æ–¥–∞–ª –∂–∞–ª–æ–±—É. –û–Ω–∏ –Ω—É–∂–Ω—ã –¥–ª—è –±–æ—Ä—å–±—ã —Å–æ —Å–ø–∞–º–æ–º.\n\n<b>2. –ö–æ–º—É –º—ã –ø–µ—Ä–µ–¥–∞–µ–º –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ?</b>\n–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –≤ –ø–æ–ª–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ —Ç—Ä–µ—Ç—å—è —Å—Ç–æ—Ä–æ–Ω–∞ –∏—Ö –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–ª—É—á–∏—Ç.\n\n<b>3. –ò—Å–∫–ª—é—á–µ–Ω–∏—è</b>\n3.1 –í—ã –º–æ–∂–µ—Ç–µ —Å–∞–º–∏ —Å–æ–æ–±—â–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –ø–µ—Ä–µ–ø–∏—Å–∫–µ —Å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º, –≤ —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –æ–Ω–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—Å—è –∏–º –∫–∞–∫ —É–≥–æ–¥–Ω–æ.\n3.2 –ï—Å–ª–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø–æ–∂–∞–ª–æ–≤–∞–ª—Å—è –Ω–∞ –≤–∞—à –¥–∏–∞–ª–æ–≥, –Ω–∞—à–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –ø–æ–ª—É—á–∞—Ç –¥–æ—Å—Ç—É–ø –∫ –í–∞—à–∏–º —Å–æ–æ–±—â–µ–Ω–∏—è–º –≤ —ç—Ç–æ–º –¥–∏–ª–∞–ª–æ–≥–µ. –í–∞—à–µ –∏–º—è –∏ –¥—Ä—É–≥–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –±—É–¥–µ—Ç –∏–º –¥–æ—Å—Ç—É–ø–Ω–∞, –µ—Å–ª–∏ –≤—ã –Ω–µ –ø–∏—Å–∞–ª–∏ –µ—ë –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.\n\n\n–ü–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—Å–∞—Ç—å @LyoSU –∏–ª–∏ –µ—Å–ª–∏ —É –≤–∞—Å —Å–ø–∞–º –±–∞–Ω –≤ @ly_oBot <i>(–Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)</i>";
    }else{
        if( isset($partnerUser) && isset($userDialog) ){

            $dialogMessage = json_decode(base64_decode($userDialog['message']),true);
            $dialogMessage[] = $pre;
            $userDialog['message'] = base64_encode(json_encode($dialogMessage));
            $userDialog['timeLast'] = time();

            if($user['contacts'] == 1 && $partnerUser['contacts'] == 1) $partnerUserLogin = "<a href=\"tg://user?id=".$user['telegram_id']."\">".$user['login']."</a>";
            else $partnerUserLogin = "<b>–°–æ–±–µ—Å–µ–¥–Ω–∏–∫</b>";
            
            // if(isset($pre['entities']) OR isset($pre['caption_entities'])) $message = "<b>–û—à–∏–±–∫–∞!</b>\n–°—Å—ã–ª–∫–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –∑–∞–ø—Ä–µ—â–µ–Ω—ã.";
            if(!isset($pre['caption'])) $pre['caption'] = '';

            if(isset($pre['photo']))
                Ly::sendMethod ( 'sendPhoto', ['chat_id' => $partnerUser['telegram_id'], 'photo' => end($pre['photo'])['file_id'], 'caption' => $pre['caption'], 'parse_mode' => 'HTML' ] );
            elseif(isset($pre['audio']))
                Ly::sendMethod ( 'sendAudio', ['chat_id' => $partnerUser['telegram_id'], 'audio' => $pre['audio']['file_id'], 'caption' => $pre['caption'], 'parse_mode' => 'HTML' ] );
            elseif(isset($pre['video']))
                Ly::sendMethod ( 'sendVideo', ['chat_id' => $partnerUser['telegram_id'], 'video' => $pre['video']['file_id'], 'caption' => $pre['caption'], 'parse_mode' => 'HTML' ] );
            elseif(isset($pre['animation']))
                Ly::sendMethod ( 'sendAnimation', ['chat_id' => $partnerUser['telegram_id'], 'animation' => $pre['animation']['file_id'], 'caption' => $pre['caption'], 'parse_mode' => 'HTML' ] );
            elseif(isset($pre['voice']))
                Ly::sendMethod ( 'sendVoice', ['chat_id' => $partnerUser['telegram_id'], 'voice' => $pre['voice']['file_id'], 'caption' => $pre['caption'], 'parse_mode' => 'HTML' ] );
            elseif(isset($pre['video_note']))
                Ly::sendMethod ( 'sendVideoNote', ['chat_id' => $partnerUser['telegram_id'], 'video_note' => $pre['video_note']['file_id'], 'caption' => $pre['caption'], 'parse_mode' => 'HTML' ] );
            elseif(isset($pre['sticker']))
                Ly::sendMethod ( 'sendSticker', ['chat_id' => $partnerUser['telegram_id'], 'sticker' => $pre['sticker']['file_id'], 'caption' => $pre['caption'], 'parse_mode' => 'HTML' ] );
            elseif(isset($pre['document']))
                $message = "<b>–û—à–∏–±–∫–∞!</b>\n–î–æ–∫—É–º–µ–Ω—Ç—ã –∑–∞–ø—Ä–µ—â–µ–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å.";
            elseif(!empty($text))
                Ly::sendMethod ( 'sendMessage', ['chat_id' => $partnerUser['telegram_id'], 'text' => "$partnerUserLogin\n".$text, 'parse_mode' => 'HTML' ] );
        }else{
            $message = "<b>–£ —Ç–µ–±—è —Å–µ–π—á–∞—Å –Ω–µ—Ç —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.</b>\n–î–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –Ω–∞–ø–∏—à–∏ /start";
        }
    }
    if(isset($message)) Ly::sendMethod ( 'sendMessage', ['chat_id' => $chat_id, 'text' => $message, 'parse_mode' => 'HTML', 'reply_markup' => $keyboard ] );
}elseif( isset($input['callback_query']) ){

    $answerCallbackText = '';
    $show_alert = false;
    $keyboard = [];

    switch ($query['m']) {
        case 1:
            if(isset($query['search'])){
                if($user['search'] > 0) $user['search'] = 0;
                else $user['search'] = time();
            }elseif($user['search'] == 0 && $user['dialog_id'] == 0){
                if(isset($query['m_sex'])) $user['m_sex'] = $query['m_sex'];
                elseif(isset($query['m_age'])) $user['m_age'] = $query['m_age'];
                elseif(isset($query['w_sex'])) $userData['wish']['sex'] = $query['w_sex'];
                elseif(isset($query['w_age'])) $userData['wish']['age'][$query['w_age']] = (($userData['wish']['age'][$query['w_age']] == 1)?0:1);
            }

            menuSearchkeyboard();

            $keyboard['inline_keyboard'] = array_values($keyboard['inline_keyboard']);
            $keyboard = json_encode( $keyboard );

            $searchCount = R::count('user', 'search > 0');
            $dialogCount = R::count('dialog', 'end = 0');

            if($user['search'] == 0) $message = $menuText;
            else $message = $menuSearchText;

            $message .= "\n\n<b>–õ—é–¥–µ–π –≤ –ø–æ–∏—Å–∫:</b> ".$searchCount;
            $message .= "\n<b>–ê–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤:</b> ".$dialogCount;

            Ly::sendMethod ( 'editMessageText', ['chat_id' => $chat_id, 'message_id' => $message_id, 'text' => $message, 'parse_mode' => 'HTML', 'reply_markup' => $keyboard ] );
            if( isset($userData['menu_id']) && $message_id !== $userData['menu_id'] ) Ly::sendMethod ( 'editMessageText', ['chat_id' => $chat_id, 'message_id' => $userData['menu_id'], 'text' => $message, 'parse_mode' => 'HTML', 'reply_markup' => $keyboard ] );
        break;
        
        case 2:
            $userDialog = R::findOne('dialog', 'id = ?', [$query['dialog_id']]);
            if($query['t'] == 'spam'){
                $userDialog['spam'] = 1;
                $answerCallbackText = '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º, –≤–∞—à–∞ –∂–∞–ª–æ–±–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É';
            }elseif($query['t'] == 'ban'){
                $userDialog['ban'] = 1;
                $answerCallbackText = '–í—ã –±–æ–ª—å—à–µ –Ω–µ –≤—Å—Ç—Ä–µ—Ç–∏—Ç–µ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ—á–µ–Ω–∏–µ 1 —á–∞—Å–∞';
            }
            $show_alert = true;
        break;

        case 3:
            if($query['a'] == 1){
                if(isset($partnerUser)){
                    if($partnerUser['contacts'] == 0){
                        $message = "<b>–í—ã –ø—Ä–µ–¥–ª–æ–∂–∏–ª–∏ –æ–±–º–µ–Ω—è—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏.</b>";
            
                        Ly::sendMethod ( 'sendMessage', ['chat_id' => $partnerUser['telegram_id'], 'text' => "<b>–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø—Ä–µ–¥–ª–æ–∂–∏–ª –æ–±–º–µ–Ω—è—Ç—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏.</b>\n–î–ª—è –æ–±–º–µ–Ω–∞ –Ω–∞–ø–∏—à–∏ /actions", 'parse_mode' => 'HTML' ] );
                        $user['contacts'] = 1;
                    }else{
                        $message = "<b>–ö–æ–Ω—Ç–∞–∫—Ç—ã —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞:</b> <a href=\"tg://user?id=".$partnerUser['telegram_id']."\">".$partnerUser['login']."</a>\n–£–¥–∞—á–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è!";
            
                        if($user['contacts'] == 0){
                            Ly::sendMethod ( 'sendMessage', ['chat_id' => $partnerUser['telegram_id'], 'text' => "<b>–ö–æ–Ω—Ç–∞–∫—Ç—ã —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞:</b> <a href=\"tg://user?id=".$user['telegram_id']."\">".$user['login']."</a>\n–£–¥–∞—á–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è!", 'parse_mode' => 'HTML' ] );
                            $user['contacts'] = 1;
                        }
                    }
                }
            }elseif($query['a'] == 2){
                if( isset($partnerUser) ){
                    $spam_text = '–°–æ–æ–±—â–∏—Ç—å –æ —Å–ø–∞–º–µ';
                    $ban_text = '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ 1 —á–∞—Å';
                    
                    Ly::keyboard( $spam_text, 0, ['m' => 2, 'dialog_id' => $partnerUser['dialog_id'], 't' => 'spam'] );
                    Ly::keyboard( $ban_text, 1, ['m' => 2, 'dialog_id' => $partnerUser['dialog_id'], 't' => 'ban'] );
        
                    $keyboard = json_encode( $keyboard );
                    
                    Ly::sendMethod ( 'sendMessage', ['chat_id' => $user['telegram_id'], 'text' => "<b>–î–∏–∞–ª–æ–≥ –æ–∫–æ–Ω—á–µ–Ω</b>", 'parse_mode' => 'HTML', 'reply_markup' => $keyboard ] );
                    
                    $keyboard = [];
                    Ly::keyboard( $spam_text, 0, ['m' => 2, 'dialog_id' => $user['dialog_id'], 't' => 'spam'] );
                    Ly::keyboard( $ban_text, 1, ['m' => 2, 'dialog_id' => $user['dialog_id'], 't' => 'ban'] );
                    
                    $keyboard = json_encode( $keyboard );
                    
                    Ly::sendMethod ( 'sendMessage', ['chat_id' => $partnerUser['telegram_id'], 'text' => "<b>–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –∑–∞–≤–µ—Ä—à–∏–ª –¥–∏–∞–ª–æ–≥</b>", 'parse_mode' => 'HTML', 'reply_markup' => $keyboard ] );
        
                    $keyboard = [];
        
                    $message = "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞, –Ω–∞–ø–∏—Å–∞–≤ /start";
        
                    Ly::keyboard( "–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫", 0 );
        
                    $keyboard['keyboard'] = array_values($keyboard['keyboard']);
                    $keyboard['resize_keyboard'] = true;
                    $keyboard = json_encode( $keyboard );
        
                    Ly::sendMethod ( 'sendMessage', ['chat_id' => $partnerUser['telegram_id'], 'text' => $message, 'parse_mode' => 'HTML', 'reply_markup' => $keyboard ] );
        
                    $partnerUser['dialog_id'] = 0;
                    $partnerUser['contacts'] = 0;
                    R::store($partnerUser);
                    $user['dialog_id'] = 0;
                    $user['contacts'] = 0;
                    R::store($user);
                    
                    $partnerDialog = R::findOne('dialog', 'user_id = ? && partner_id = ? ORDER BY `time_reg` DESC', [$userDialog['partner_id'], $userDialog['user_id']]);

                    $partnerDialog['end'] = time();
                    R::store($partnerDialog);

                    $userDialog['end'] = time();
                    
                }else{
                    $message = "<b>–£ —Ç–µ–±—è —Å–µ–π—á–∞—Å –Ω–µ—Ç —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.</b>\n–î–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –Ω–∞–ø–∏—à–∏ /start";
                }
            }
            Ly::sendMethod ( 'sendMessage', ['chat_id' => $chat_id, 'text' => $message, 'parse_mode' => 'HTML', 'reply_markup' => $keyboard ] );
        break;
    }
    
    Ly::sendMethod ( 'answerCallbackQuery', [ 'callback_query_id' => $callback_query_id, 'text' => $answerCallbackText, 'show_alert' => $show_alert ] );
}

$user['data'] = base64_encode(json_encode($userData));
$user['time'] = time();

if(isset($user_id)) R::store($user);
if(isset($userDialog)) R::store($userDialog);